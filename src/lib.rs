#[derive(Debug, Clone, Copy)]
pub struct File<'a> {
    pub chapter: &'a str,
    pub description: &'a str,
    pub listing: &'a str,
    pub status: &'a str,
}

pub fn get_files() -> &'static [File<'static>] {
    &[
        File {
            chapter: "1. getting started; 1.2. hello, world!",
            description: "a program that prints hello, world!",
            listing: "1-1",
            status: "desired",
        },
        File {
            chapter: "1. getting started; 1.3. hello, cargo!",
            description: "contents of cargo.toml generated by cargo new",
            listing: "1-2",
            status: "toml",
        },
        File {
            chapter: "2. programming a guessing game",
            description: "code that gets a guess from the user and prints it",
            listing: "2-1",
            status: "desired",
        },
        File {
            chapter: "2. programming a guessing game",
            description: "the output from running cargo build after adding the rand crate as a dependency",
            listing: "2-2",
            status: "bash",
        },
        File {
            chapter: "2. programming a guessing game",
            description: "adding code to generate a random number",
            listing: "2-3",
            status: "desired",
        },
        File {
            chapter: "2. programming a guessing game",
            description: "handling the possible return values of comparing two numbers",
            listing: "2-4",
            status: "error",
        },
        File {
            chapter: "2. programming a guessing game",
            description: "ignoring a non-number guess and asking for another guess instead of crashing the program",
            listing: "2-5",
            status: "desired",
        },
        File {
            chapter: "2. programming a guessing game",
            description: "complete guessing game code",
            listing: "2-6",
            status: "desired",
        },
        File {
            chapter: "3. common programming concepts; 3.3. functions",
            description: "a main function declaration containing one statement",
            listing: "3-1",
            status: "desired",
        },
        File {
            chapter: "3. common programming concepts; 3.5. control flow",
            description: "assigning the result of an if expression to a variable",
            listing: "3-2",
            status: "desired",
        },
        File {
            chapter: "3. common programming concepts; 3.5. control flow",
            description: "using a while loop to run code while a condition evaluates to true",
            listing: "3-3",
            status: "desired",
        },
        File {
            chapter: "3. common programming concepts; 3.5. control flow",
            description: "looping through each element of a collection using a while loop",
            listing: "3-4",
            status: "desired",
        },
        File {
            chapter: "3. common programming concepts; 3.5. control flow",
            description: "looping through each element of a collection using a for loop",
            listing: "3-5",
            status: "desired",
        },
    ]
}
