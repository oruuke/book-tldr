#[derive(Debug, Clone, Copy)]
pub struct File<'a> {
    pub chapter: &'a str,
    pub description: &'a str,
    pub listing: &'a str,
    pub status: &'a str,
}

pub fn get_files() -> &'static [File<'static>] {
    &[
        File {
            chapter: "1. getting started; 1.2. hello, world!",
            description: "a program that prints hello, world!",
            listing: "1-1",
            status: "desired",
        },
        File {
            chapter: "1. getting started; 1.3. hello, cargo!",
            description: "contents of cargo.toml generated by cargo new",
            listing: "1-2",
            status: "toml",
        },
        File {
            chapter: "2. programming a guessing game",
            description: "code that gets a guess from the user and prints it",
            listing: "2-1",
            status: "desired",
        },
        File {
            chapter: "2. programming a guessing game",
            description: "the output from running cargo build after adding the rand crate as a dependency",
            listing: "2-2",
            status: "bash",
        },
        File {
            chapter: "2. programming a guessing game",
            description: "adding code to generate a random number",
            listing: "2-3",
            status: "desired",
        },
        File {
            chapter: "2. programming a guessing game",
            description: "handling the possible return values of comparing two numbers",
            listing: "2-4",
            status: "error",
        },
        File {
            chapter: "2. programming a guessing game",
            description: "ignoring a non-number guess and asking for another guess instead of crashing the program",
            listing: "2-5",
            status: "desired",
        },
        File {
            chapter: "2. programming a guessing game",
            description: "complete guessing game code",
            listing: "2-6",
            status: "desired",
        },
        File {
            chapter: "3. common programming concepts; 3.3. functions",
            description: "a main function declaration containing one statement",
            listing: "3-1",
            status: "desired",
        },
        File {
            chapter: "3. common programming concepts; 3.5. control flow",
            description: "assigning the result of an if expression to a variable",
            listing: "3-2",
            status: "desired",
        },
        File {
            chapter: "3. common programming concepts; 3.5. control flow",
            description: "using a while loop to run code while a condition evaluates to true",
            listing: "3-3",
            status: "desired",
        },
        File {
            chapter: "3. common programming concepts; 3.5. control flow",
            description: "looping through each element of a collection using a while loop",
            listing: "3-4",
            status: "desired",
        },
        File {
            chapter: "3. common programming concepts; 3.5. control flow",
            description: "looping through each element of a collection using a for loop",
            listing: "3-5",
            status: "desired",
        },
        File {
            chapter: "4. understanding ownership; 4.1. what is ownership?",
            description: "a variable and the scope in which it is valid",
            listing: "4-1",
            status: "desired",
        },
        File {
            chapter: "4. understanding ownership; 4.1. what is ownership?",
            description: "assigning the integer value of vaiable x to y",
            listing: "4-2",
            status: "desired",
        },
        File {
            chapter: "4. understanding ownership; 4.1. what is ownership?",
            description: "functions with ownership and the scope annotated",
            listing: "4-3",
            status: "desired",
        },
        File {
            chapter: "4. understanding ownership; 4.1. what is ownership?",
            description: "transferring ownership of return values",
            listing: "4-4",
            status: "desired",
        },
        File {
            chapter: "4. understanding ownership; 4.1. what is ownership?",
            description: "returning ownership of parameters",
            listing: "4-5",
            status: "desired",
        },
        File {
            chapter: "4. understanding ownership; 4.2. references and borrowing",
            description: "attempting to modify a borrowed value",
            listing: "4-6",
            status: "error",
        },
        File {
            chapter: "4. understanding ownership; 4.3. the slice type",
            description: "the first_word function that returns a byte index value into the string parameter",
            listing: "4-7",
            status: "desired",
        },
        File {
            chapter: "4. understanding ownership; 4.3. the slice type",
            description: "storing the result from calling the first_word function and then changing the string contents",
            listing: "4-8",
            status: "desired",
        },
        File {
            chapter: "4. understanding ownership; 4.3. the slice type",
            description: "improving the first_word function by using a string slice for the type of the s parameter",
            listing: "4-9",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.1. defining and instantiating structs",
            description: "a user struct definition",
            listing: "5-1",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.1. defining and instantiating structs",
            description: "creating an instance of the user struct",
            listing: "5-2",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.1. defining and instantiating structs",
            description: "changing the value in the email field of a user instance",
            listing: "5-3",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.1. defining and instantiating structs",
            description: "a build_user function that takes an email and username and returns a user instance",
            listing: "5-4",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.1. defining and instantiating structs",
            description: "a build_user function that uses field init shorthand because the username and email parameters have the same as struct fields",
            listing: "5-5",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.1. defining and instantiating structs",
            description: "creating a new user instance using all but one of the values from user1",
            listing: "5-6",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.1. defining and instantiating structs",
            description: "using struct syntax to set a new email value for a user instance but to use the rest of the values from user1",
            listing: "5-7",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.2. an example program using structs",
            description: "calculating the area of a rectangle specified by separate width and height variables",
            listing: "5-8",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.2. an example program using structs",
            description: "specifying the width and height of the rectangle with a tuple",
            listing: "5-9",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.2. an example program using structs",
            description: "defining a rectangle struct",
            listing: "5-10",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.2. an example program using structs",
            description: "attempting to print a rectangle instance",
            listing: "5-11",
            status: "error",
        },
        File {
            chapter: "5. using structs to structure related data; 5.2. an example program using structs",
            description: "adding the attribute to derive the debug trait and printing the rectangle instance using debug formatting",
            listing: "5-12",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.3. method syntax",
            description: "defining an area method on the rectangle struct",
            listing: "5-13",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.3. method syntax",
            description: "using the as-yet-unwritten can_hold method",
            listing: "5-14",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.3. method syntax",
            description: "implementing the can_hold method on rectangle that takes another rectangle instance as a parameter",
            listing: "5-15",
            status: "desired",
        },
        File {
            chapter: "5. using structs to structure related data; 5.3. method syntax",
            description: "rewriting listing 5-15 using multiple impl blocks",
            listing: "5-16",
            status: "desired",
        },
        File {
            chapter: "6. enums and pattern matching; 6.1. defining an enum",
            description: "storing the data and ipaddrkind variant of an ip address using a struct",
            listing: "6-1",
            status: "desired",
        },
        File {
            chapter: "6. enums and pattern matching; 6.1. defining an enum",
            description: "a message enum whose variants each store different amounts and types of values",
            listing: "6-2",
            status: "desired",
        },
        File {
            chapter: "6. enums and pattern matching; 6.2. the match control flow construct",
            description: "an enum and a match expression that has the variants of the enum as its patterns",
            listing: "6-3",
            status: "desired",
        },
        File {
            chapter: "6. enums and pattern matching; 6.2. the match control flow construct",
            description: "a coin enum in which the quarter variant also holds a usstate value",
            listing: "6-4",
            status: "desired",
        },
        File {
            chapter: "6. enums and pattern matching; 6.2. the match control flow construct",
            description: "a function that uses a match expression on an option<i32>",
            listing: "6-5",
            status: "desired",
        },
        File {
            chapter: "6. enums and pattern matching; 6.3. concise control flow with if let and let else",
            description: "a match that only cares about executing code when the value is some",
            listing: "6-6",
            status: "desired",
        },
        File {
            chapter: "6. enums and pattern matching; 6.3. concise control flow with if let and let else",
            description: "checking whether a state existed in 1900 by using conditionals nested inside an if let",
            listing: "6-7",
            status: "desired",
        },
        File {
            chapter: "6. enums and pattern matching; 6.3. concise control flow with if let and let else",
            description: "using if let to produce a value or return early",
            listing: "6-8",
            status: "desired",
        },
        File {
            chapter: "6. enums and pattern matching; 6.3. concise control flow with if let and let else",
            description: "using let...else to clarify the flow through the function",
            listing: "6-9",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.2. defining modules to control scope and privacy",
            description: "a front_of_house module containing other modules that then contain functions",
            listing: "7-1",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.2. defining modules to control scope and privacy",
            description: "a front_of_house module containing other modules that then contain functions",
            listing: "7-2",
            status: "tree",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.3. paths for referring to an item in the module tree",
            description: "a front_of_house module containing other modules that then contain functions",
            listing: "7-3",
            status: "error",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.3. paths for referring to an item in the module tree",
            description: "compiler errors from building the code in listing 7-3",
            listing: "7-4",
            status: "bash",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.3. paths for referring to an item in the module tree",
            description: "declaring the hosting module as pub to use it from eat_at_restaurant",
            listing: "7-5",
            status: "error",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.3. paths for referring to an item in the module tree",
            description: "compiler errors from building  the code in listing 7-5",
            listing: "7-6",
            status: "bash",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.3. paths for referring to an item in the module tree",
            description: "adding the pub keyword to mod hosting and fn add_to_waitlist lets us call the function from eat_at_restaurant",
            listing: "7-7",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.3. paths for referring to an item in the module tree",
            description: "calling a function using a relative path starting with super",
            listing: "7-8",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.3. paths for referring to an item in the module tree",
            description: "a struct with some public fields and some private fields",
            listing: "7-9",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.3. paths for referring to an item in the module tree",
            description: "designating an enum as public makes all its variants public",
            listing: "7-10",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.4. bringing paths into scope with the use keyword",
            description: "bringing a module into scope with use",
            listing: "7-11",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.4. bringing paths into scope with the use keyword",
            description: "a use statement only applies in the scope it's written in",
            listing: "7-12",
            status: "error",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.4. bringing paths into scope with the use keyword",
            description: "bringing the add_to_waitlist function into scope with use, which is unidiomatic",
            listing: "7-12",
            status: "questionable",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.4. bringing paths into scope with the use keyword",
            description: "bringing hashmap into scope in an idiomatic way",
            listing: "7-14",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.4. bringing paths into scope with the use keyword",
            description: "bringing two types with the same name into the scope requires using their parent modules",
            listing: "7-15",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.4. bringing paths into scope with the use keyword",
            description: "renaming a type when it's brought into scope with the as keyword",
            listing: "7-16",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.4. bringing paths into scope with the use keyword",
            description: "making a name available for any code to use from a new scope with pub use",
            listing: "7-17",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.4. bringing paths into scope with the use keyword",
            description: "specifying a nested path to bring multiple items with the same prefix into scope",
            listing: "7-18",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.4. bringing paths into scope with the use keyword",
            description: "two use statements where one is a subpath of the other",
            listing: "7-19",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.4. bringing paths into scope with the use keyword",
            description: "combining the paths in listing 7-19  into one use statement",
            listing: "7-20",
            status: "desired",
        },
        File {
            chapter: "7. managing growing projects with packages, crates, and modules; 7.5. separating modules into different files",
            description: "declaring the front_of_house module whose body will be in src/front_of_house.rs",
            listing: "7-21",
            status: "error",
        },
        File {
            chapter: "8. common collections; 8.1. storing lists of values with vectors",
            description: "creating a new, empty vector to hold values of type i32",
            listing: "8-1",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.1. storing lists of values with vectors",
            description: "creating a new vector containing values",
            listing: "8-2",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.1. storing lists of values with vectors",
            description: "using the push method to add values to a vector",
            listing: "8-3",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.1. storing lists of values with vectors",
            description: "using indexing syntax and using the get method to access an item in a vector",
            listing: "8-4",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.1. storing lists of values with vectors",
            description: "attempting to access the element at index 100 in a vector containing five elements",
            listing: "8-5",
            status: "error",
        },
        File {
            chapter: "8. common collections; 8.1. storing lists of values with vectors",
            description: "attempting to add an element to a vector while holding a reference to an item",
            listing: "8-6",
            status: "error",
        },
        File {
            chapter: "8. common collections; 8.1. storing lists of values with vectors",
            description: "printing each element in a vector by iterating over thhe elements using a for loop",
            listing: "8-7",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.1. storing lists of values with vectors",
            description: "iterating over mutable references to elements in a vector",
            listing: "8-8",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.1. storing lists of values with vectors",
            description: "defining an enum to store values of different types in one vector",
            listing: "8-9",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.1. storing lists of values with vectors",
            description: "showing where the vector and its elements are dropped",
            listing: "8-10",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.2. storing utf-8 encoded text with strings",
            description: "creating a new, empty string",
            listing: "8-11",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.2. storing utf-8 encoded text with strings",
            description: "using the to_string method to create a string from a string literal",
            listing: "8-12",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.2. storing utf-8 encoded text with strings",
            description: "using the string::from function to create a string from a string literal",
            listing: "8-13",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.2. storing utf-8 encoded text with strings",
            description: "storing greetings in different languages in strings",
            listing: "8-14",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.2. storing utf-8 encoded text with strings",
            description: "appending a string slice to a string using the push_str method",
            listing: "8-15",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.2. storing utf-8 encoded text with strings",
            description: "using a string slice after appending its contents to a string",
            listing: "8-16",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.2. storing utf-8 encoded text with strings",
            description: "adding one character to a string value using push",
            listing: "8-17",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.2. storing utf-8 encoded text with strings",
            description: "using the + operator to combine two string values into a new string value",
            listing: "8-18",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.2. storing utf-8 encoded text with strings",
            description: "attempting to use indexing syntax with a string",
            listing: "8-19",
            status: "error",
        },
        File {
            chapter: "8. common collections; 8.3. storing keys with associated values in hash maps",
            description: "creating a new hash map and inserting some keys and values",
            listing: "8-20",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.3. storing keys with associated values in hash maps",
            description: "creating a new hash map and inserting some keys and values",
            listing: "8-20",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.3. storing keys with associated values in hash maps",
            description: "accessing the score for the blue team stored in the hash map",
            listing: "8-21",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.3. storing keys with associated values in hash maps",
            description: "showing that keys and values are owned by the hash map once they're inserted",
            listing: "8-22",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.3. storing keys with associated values in hash maps",
            description: "using the entry method to only insert if the key does not already have a value",
            listing: "8-24",
            status: "desired",
        },
        File {
            chapter: "8. common collections; 8.3. storing keys with associated values in hash maps",
            description: "counting occurances of words using a hash map that stores words and counts",
            listing: "8-25",
            status: "desired",
        },
    ]
}
